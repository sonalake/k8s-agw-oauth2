server:
  port: 9000
spring:
  application:
    name: agw
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
        - id: auth-certs
          uri: ${OAUTH_URI_ROOT}
          predicates:
            - Path=/auth-certs
          filters:
            - RewritePath=/auth-certs, ${JWKS_PATH}
        - id: users
          uri: http://users:9001
          predicates:
            - Path=/api/users/**
          filters:
            - RewritePath=/api/users, /
        - id: portal
          uri: http://portal:80
          predicates:
            - Path=/**
  security:
    oauth2:
      client:
        provider:
          iam:
            token-uri: ${OAUTH_URI_ROOT}/auth/realms/msagw/protocol/openid-connect/token
            authorization-uri: ${OAUTH_URI_ROOT}/auth/realms/msagw/protocol/openid-connect/auth
            userinfo-uri: ${OAUTH_URI_ROOT}/auth/realms/msagw/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
        registration:
          iam:
            provider: iam
            client-id: App
            client-secret: f4f76724-2a84-4cd8-83e5-5a5af23a8418
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH_REDIRECT_URI}

msagw:
  hazelcast-dns: agv-hazelcast.default.svc.cluster.local
  oauth2:
    logout-uri: ${OAUTH_URI_ROOT}/auth/realms/Truata/protocol/openid-connect/logout
